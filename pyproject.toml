[build-system]
requires = [
    "setuptools>=64",
    "setuptools-scm>=8.0",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]  # list of folders that contain the packages (["."] by default)
include = ["sgvb_psd*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["sgvb_psd.tests*"]  # exclude packages matching these glob patterns (empty by default)
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)


[project]
name = "sgvb_psd"
version = "0.0.3"
requires-python = ">=3.8"
description = "A python package for estimating the power spectral density (PSD) of correlated multivariate detector noise using variational inference (VI)."
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    {name = "Jianan Liu", email = "jliu812@aucklanduni.ac.nz" },
    {name = "Avi Vajpeyi", email = "avi.vajpeyi@gmail.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: Jupyter"
]
dependencies = [
    "tensorflow-probability>=0.24.0",
    "tf-keras",
    "pandas",
    "numpy",
    "matplotlib",
    "hyperopt",
    "colorama"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pre-commit",
    "flake8",
    "black",
    "jupyter-book",
    "sphinx-inline-tabs"
]

[project.urls]
"Homepage" = "https://github.com/nz-gravity/sgvb_psd"
"Bug Reports" = "https://github.com/nz-gravity/sgvb_psd/issues"
"Source" = "https://github.com/nz-gravity/sgvb_psd"
"Documentation" = "https://nz-gravity.github.io/sgvb_psd/"

[tool.setuptools_scm]
version_file = "src/sgvb_psd/_version.py"

[tool.black]
line-length = 79
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | train_models
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
